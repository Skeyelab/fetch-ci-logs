name: Release & Publish to npm

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Run linting
      run: npm run lint

    - name: Check if version matches tag
      if: github.event_name == 'release'
      run: |
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
          echo "❌ Version mismatch! Package version: $PACKAGE_VERSION, Tag version: $TAG_VERSION"
          exit 1
        fi
        echo "✅ Version check passed: $PACKAGE_VERSION"

    - name: Version bump (manual trigger)
      if: github.event_name == 'workflow_dispatch'
      run: |
        echo "📦 Bumping version: ${{ inputs.version_type }}"
        npm version ${{ inputs.version_type }} --no-git-tag-version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create Git tag (manual trigger)
      if: github.event_name == 'workflow_dispatch'
      run: |
        NEW_VERSION=$(node -p "require('./package.json').version")
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add package.json package-lock.json
        git commit -m "chore: bump version to $NEW_VERSION"
        git tag "v$NEW_VERSION"
        git push origin main --tags

    - name: Create GitHub Release (manual trigger)
      if: github.event_name == 'workflow_dispatch'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.NEW_VERSION }}
        release_name: Release v${{ env.NEW_VERSION }}
        body: |
          ## 🚀 Release v${{ env.NEW_VERSION }}

          ### Changes
          - Automated release via GitHub Actions
          - Published to npm registry

          ### Installation
          ```bash
          npm install -g fetch-ci-logs@${{ env.NEW_VERSION }}
          ```
        draft: false
        prerelease: false
